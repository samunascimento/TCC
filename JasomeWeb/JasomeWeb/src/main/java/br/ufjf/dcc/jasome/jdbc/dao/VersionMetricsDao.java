/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.ufjf.dcc.jasome.jdbc.dao;

import br.ufjf.dcc.gmr.core.db.ConnectionFactory;
import br.ufjf.dcc.gmr.core.jasome.model.VersionMetrics;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.*;

/**
 *
 * @author anton
 */
public class VersionMetricsDao {
    private final Connection connection;
    private List<VersionMetrics> listVersionMetrics;

    public VersionMetricsDao() {
        this.connection = ConnectionFactory.getConnection();
        listVersionMetrics = new ArrayList<>();
    }
    
    public int insert(VersionMetrics versionMetrics){
        this.listVersionMetrics.add(versionMetrics);
        
        String sql = "INSERT INTO tb_versionMetrics " +
        "(tloc)" +
        "VALUES (?);";

        try{
            PreparedStatement stmt = connection.prepareStatement(sql, PreparedStatement.RETURN_GENERATED_KEYS);
            //set values
            stmt.setInt(1, Integer.parseInt(versionMetrics.getTloc().getValue()));
            stmt.executeUpdate();
            ResultSet tableKeys = stmt.getGeneratedKeys();
            tableKeys.next();
            int autoGeneratedID = tableKeys.getInt(1);
            stmt.close();
            return autoGeneratedID;
        } catch(SQLException e){
            throw new RuntimeException(e);
        }  
    }
    public void delete(int id){
        String sql = "DELETE FROM tb_versionMetrics WHERE ID = ?";
        try{
            PreparedStatement stmt = connection.prepareStatement(sql);
            //set values
            stmt.setInt(1, id);
            stmt.executeUpdate();
            stmt.close();
        } catch(SQLException e){
            throw new RuntimeException(e);
        }  
    }
    
    public List<VersionMetrics> select(){
        String sql = "SELECT * FROM tb_versionMetrics ";
        try{
            PreparedStatement stmt = connection.prepareStatement(sql);
            //set values
            //stmt.setInt(1, projectMetrics.getId());
            //stmt.setString(2, projectMetrics.getSourceDir());
            stmt.executeUpdate();
            stmt.close();
            return this.listVersionMetrics;
        } catch(SQLException e){
            throw new RuntimeException(e);
        }
    }
}
