/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.ufjf.dcc.gmr.core.conflictanalysis.GUI.view;

import br.ufjf.dcc.gmr.core.conflictanalysis.models.ConflictFile;
import br.ufjf.dcc.gmr.core.conflictanalysis.models.ConflictRegion;
import br.ufjf.dcc.gmr.core.conflictanalysis.models.MergeEvent;
import javax.swing.DefaultListModel;

/**
 *
 * @author joao
 */
public class VisualizeMerge extends javax.swing.JFrame {
    
    private MergeEvent event;
    private ConflictFile currentFile;
    
    public VisualizeMerge(MergeEvent event) {
        initComponents();
        this.event = event;
        super.setTitle(event.getHash());
        parentOne.setText("Parent 1: " + event.getParents().get(0));
        parentTwo.setText("Parent 2: " + event.getParents().get(1));
        DefaultListModel model = new DefaultListModel();
        for(ConflictFile file : event.getConflictFiles()){
            model.addElement(file.getFileName());
        }
        list.setModel(model);
        currentFile = event.getConflictFiles().get(0);
        update(currentFile);
        super.setVisible(true);
    }
    private void printRegion(ConflictRegion region){
        String info = "";
        for(String str : region.getBeforeContext()){
            info.concat(str).concat("\n");
        }
        info = info.concat("<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<").concat("\n");
        for(String str : region.getV1()){
            info = info.concat(str).concat("\n");
        }
        info = info.concat("==============================").concat("\n");;
        for(String str : region.getV2()){
            info = info.concat(str).concat("\n");
        }
        info = info.concat(">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>").concat("\n");;
        for(String str : region.getAfterContext()){
            info = info.concat(str).concat("\n");
        }
        textArea.setText(info);
    }
    
    private void update (ConflictFile file){
        if(file.getConflictRegion().isEmpty()){
            count.setText("0");
            max.setText("0");
            textArea.setText("This file has not been merged as it has been renamed or deleted");
        }else{
            count.setText("1");
            max.setText(Integer.toString(file.getConflictRegion().size()));
            printRegion(file.getConflictRegion().get(0));
        }
    }
            
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        list = new javax.swing.JList<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        textArea = new javax.swing.JTextArea();
        PreviousB = new javax.swing.JButton();
        nextB = new javax.swing.JButton();
        parentOne = new javax.swing.JLabel();
        parentTwo = new javax.swing.JLabel();
        max = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        count = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(1, 1, 1));

        list.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(list);

        textArea.setColumns(20);
        textArea.setRows(5);
        jScrollPane2.setViewportView(textArea);

        PreviousB.setText("Previous");
        PreviousB.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                PreviousBMouseClicked(evt);
            }
        });

        nextB.setText("Next");
        nextB.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                nextBMouseClicked(evt);
            }
        });

        parentOne.setForeground(new java.awt.Color(254, 254, 254));

        parentTwo.setForeground(new java.awt.Color(254, 254, 254));

        max.setForeground(new java.awt.Color(254, 254, 254));
        max.setText("     0");

        jLabel2.setForeground(new java.awt.Color(254, 254, 254));
        jLabel2.setText("Conflict Files");

        count.setForeground(new java.awt.Color(254, 254, 254));
        count.setText("1000");

        jLabel1.setForeground(new java.awt.Color(254, 254, 254));
        jLabel1.setText("/");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 497, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(parentTwo)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(parentOne)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(count)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(max, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(PreviousB, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(nextB)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(parentOne)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(parentTwo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 23, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(PreviousB)
                            .addComponent(nextB)
                            .addComponent(max)
                            .addComponent(count)
                            .addComponent(jLabel1))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 460, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void listMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listMouseClicked
        if(evt.getClickCount() > 1){
            currentFile = event.getConflictFiles().get(list.getSelectedIndex());
            update(currentFile);
        }
    }//GEN-LAST:event_listMouseClicked

    private void PreviousBMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_PreviousBMouseClicked
        if(Integer.parseInt(max.getText())>1){
            if(count.getText() == "1"){
                count.setText(max.getText());
            } else {
                count.setText(Integer.toString(Integer.parseInt(count.getText()) - 1));
            }
            printRegion(currentFile.getConflictRegion().get((Integer.parseInt(count.getText())-1)));
        }
    }//GEN-LAST:event_PreviousBMouseClicked

    private void nextBMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_nextBMouseClicked
        if(Integer.parseInt(max.getText())>1){
            if(count.getText() == max.getText()){
                count.setText("1");
            } else {
                count.setText(Integer.toString(Integer.parseInt(count.getText()) + 1));
            }
            printRegion(currentFile.getConflictRegion().get((Integer.parseInt(count.getText())-1)));
        }
    }//GEN-LAST:event_nextBMouseClicked

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton PreviousB;
    private javax.swing.JLabel count;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JList<String> list;
    private javax.swing.JLabel max;
    private javax.swing.JButton nextB;
    private javax.swing.JLabel parentOne;
    private javax.swing.JLabel parentTwo;
    private javax.swing.JTextArea textArea;
    // End of variables declaration//GEN-END:variables
}
